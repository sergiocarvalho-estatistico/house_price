{"frames":[{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"Boruta(SalePrice ~ ., data = na.omit(df.int[, -1]), doTrace = 2)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"Boruta.formula(SalePrice ~ ., data = na.omit(df.int[, -1]), doTrace = 2)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"Boruta.default(df, dec, ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"addShadowsAndGetImp(decReg, runs)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"getImp(cbind(x[, decReg != \"Rejected\"], xSha), y, ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"ranger::ranger(data = x, dependent.variable.name = \"shadow.Boruta.decision\", \n    num.trees = num.trees, importance = \"permutation\", scale.permutation.importance = TRUE, \n    write.forest = FALSE, ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"stop(\"User interrupt or internal error.\")","line_number":0}],"message":"Error in ranger::ranger(data = x, dependent.variable.name = \"shadow.Boruta.decision\",  : \n  User interrupt or internal error.\n"}